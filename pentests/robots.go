package pentests

import (
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"os"
	"path/filepath"
	"time"
)

// RobotsTXT takes a URL as a string, makes a directory for that URL (if it does not already exist),
// and attempts to download a robots.txt file from the URL at URL/robots.txt.
func RobotsTXT(url string) error {
	robotsTXTfilename := "robots.txt"
	dirName := directoryName(url)

	err := os.MkdirAll(dirName, 0766)
	if err != nil {
		log.Fatal(err)
	}

	client := http.Client{
		Timeout: time.Second * 2,
	}
	req, err := http.NewRequest(http.MethodGet, fmt.Sprintf("%s/%s", url, robotsTXTfilename), nil)
	if err != nil {
		return err
	}

	resp, err := client.Do(req)
	if err != nil {
		return err
	}

	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		return err
	}

	if resp.StatusCode != http.StatusOK {
		msg := fmt.Sprintf("GET /robots.txt responded with a status code of %d and the following response body:\n\n", resp.StatusCode)
		body = append([]byte(msg), body...)
		robotsTXTfilename = fmt.Sprintf("%d-%s", resp.StatusCode, robotsTXTfilename)
	}

	return ioutil.WriteFile(filepath.Join(dirName, robotsTXTfilename), body, 0666)
}
